{"version":3,"file":"static/js/680.733cd36f.chunk.js","mappings":"kOAEaA,EAAOC,EAAAA,GAAAA,GAAH,iPAOJC,EAAUD,EAAAA,GAAAA,EAAH,wFAMPE,EAAMF,EAAAA,GAAAA,IAAH,gF,mBCoBhB,EA5BkB,SAAC,GAA8C,IAA5CG,EAA2C,EAA3CA,GAAIC,EAAuC,EAAvCA,MAAOC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aACrCC,GAAWC,EAAAA,EAAAA,MAEXC,EAASJ,EAAW,UALL,kCAKK,YAAwBA,GAAgBK,EAE5DC,EAAcL,EAAeA,EAAaM,MAAM,EAAG,GAAK,MAC9D,OACE,SAACb,EAAD,WACE,UAAC,KAAD,CAAMc,GAAE,kBAAaV,GAAMW,MAAO,CAAEC,KAAMR,GAA1C,WACE,0BACE,SAACL,EAAD,CAAKc,IAAKP,EAAQQ,IAAKb,EAAOc,MAAM,WAGtC,UAACjB,EAAD,WACGG,GAAgB,iBADnB,KACuCO,EADvC,aClBKQ,EAAOnB,EAAAA,GAAAA,GAAH,4E,UCEXoB,EAAY,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACnB,OACE,SAACF,EAAD,UACGE,EAAOC,KAAI,SAAAD,GAAM,OAChB,SAAC,GAAD,UAA+BA,GAAfA,EAAOlB,UAM/BiB,EAAUG,UAAY,CACpBF,O,MAAQG,GAAAA,OAGV,S,qFCiBA,MAhCA,YAA+D,IAArCC,EAAoC,EAApCA,WAAYC,EAAwB,EAAxBA,QAASC,EAAe,EAAfA,YAK7C,OACE,+BACE,SAAC,IAAD,CACEC,UAAU,IACVC,aARkB,SAAAC,GACtBJ,EAAQ,CAAEK,KAAMD,EAAME,SAAW,KAQ7BC,mBAAoB,EACpBC,qBAAsB,EACtBC,UAAWV,EACXW,UAAWT,EACXU,cAAc,IACdC,cAAc,YACdC,kBAAkB,YAClBC,kBAAkB,YAClBC,sBAAsB,YACtBC,cAAc,YACdC,kBAAkB,YAClBC,WAAW,MACXC,eAAe,YACfC,mBAAmB,YACnBC,mBAAmB,aACnBC,gBAAgB,SAChBC,sBAAuB,W,qHCS/B,UA9BiB,WAAO,IAAD,EACrB,GAA4CC,EAAAA,EAAAA,UAAS,MAArD,eAAOC,EAAP,KAAuBC,EAAvB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAYC,OAAM,UAACH,EAAaI,IAAI,eAAlB,QAA6B,GASrD,OAPAC,EAAAA,EAAAA,YAAU,WACRP,GAAW,IACXQ,EAAAA,EAAAA,IAAkBJ,GACfK,MAAK,SAAAC,GAAG,OAAIZ,EAAkBY,MAC9BC,SAAQ,kBAAMX,GAAW,QAC3B,CAACI,KAGF,gCACGL,IAAW,SAAC,IAAD,KACZ,UAAC,IAAD,WACGF,IAAkB,SAAC,IAAD,CAAW9B,OAAQ8B,EAAee,WACtC,OAAdf,QAAc,IAAdA,OAAA,EAAAA,EAAgBgB,eACf,SAAC,IAAD,CACEzC,QAAS+B,EACThC,WAAY0B,EAAegB,YAC3BxC,YAAa+B,EAAY,Y","sources":["components/MovieItem/MovieItem.styled.jsx","components/MovieItem/MovieItem.jsx","components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.jsx","components/Pagination/Pagination.jsx","pages/HomePage/HomePage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Item = styled.li`\n  width: calc((100% - 4 * 16px) / 5);\n  -webkit-box-shadow: 0px 0px 8px 1px rgba(204, 204, 204, 1);\n  -moz-box-shadow: 0px 0px 8px 1px rgba(204, 204, 204, 1);\n  box-shadow: 0px 0px 8px 1px rgba(204, 204, 204, 1);\n`;\n\nexport const Content = styled.p`\n  font-size: 20px;\n  font-weight: 500;\n  padding: 12px 10px;\n`;\n\nexport const Img = styled.img`\n  width: 100%;\n  height: 330px;\n  object-fit: cover;\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport { Content, Img, Item } from './MovieItem.styled';\nimport noPoster from '../../images/img-default.jpg';\nimport PropTypes from 'prop-types';\n\nconst IMAGE_BASE_URL = 'https://image.tmdb.org/t/p/w780';\n\nconst MovieItem = ({ id, title, poster_path, release_date }) => {\n  const location = useLocation();\n\n  const imgUrl = poster_path ? `${IMAGE_BASE_URL}/${poster_path}` : noPoster;\n\n  const releaseDate = release_date ? release_date.slice(0, 4) : 'N/A';\n  return (\n    <Item>\n      <Link to={`/movies/${id}`} state={{ from: location }}>\n        <div>\n          <Img src={imgUrl} alt={title} width=\"300\" />\n        </div>\n\n        <Content>\n          {title ? title : 'No information'} ({releaseDate})\n        </Content>\n      </Link>\n    </Item>\n  );\n};\n\nMovieItem.propTypes = {\n  id: PropTypes.number,\n  title: PropTypes.string,\n  poster_path: PropTypes.string,\n  release_date: PropTypes.string,\n};\n\nexport default MovieItem;\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 16px;\n`;\n","import MovieItem from 'components/MovieItem/MovieItem';\nimport { List } from './MovieList.styled';\nimport PropTypes from 'prop-types';\n\nconst MovieList = ({ movies }) => {\n  return (\n    <List>\n      {movies.map(movies => (\n        <MovieItem key={movies.id} {...movies} />\n      ))}\n    </List>\n  );\n};\n\nMovieList.ptopTypes = {\n  movies: PropTypes.array,\n};\n\nexport default MovieList;\n","import ReactPaginate from 'react-paginate';\nimport './Pagination.css';\n\nfunction PaginatedItems({ totalPages, setPage, currentPage }) {\n  const handlePageClick = event => {\n    setPage({ page: event.selected + 1 });\n  };\n\n  return (\n    <>\n      <ReactPaginate\n        nextLabel=\">\"\n        onPageChange={handlePageClick}\n        pageRangeDisplayed={3}\n        marginPagesDisplayed={2}\n        pageCount={totalPages}\n        forcePage={currentPage}\n        previousLabel=\"<\"\n        pageClassName=\"page-item\"\n        pageLinkClassName=\"page-link\"\n        previousClassName=\"page-item\"\n        previousLinkClassName=\"page-link\"\n        nextClassName=\"page-item\"\n        nextLinkClassName=\"page-link\"\n        breakLabel=\"...\"\n        breakClassName=\"page-item\"\n        breakLinkClassName=\"page-link\"\n        containerClassName=\"pagination\"\n        activeClassName=\"active\"\n        renderOnZeroPageCount={null}\n      />\n    </>\n  );\n}\n\nexport default PaginatedItems;\n","import Container from 'components/Container/Container';\nimport Loader from 'components/Loader/Loader';\nimport MovieList from 'components/MovieList/MovieList';\nimport PaginatedItems from 'components/Pagination/Pagination';\nimport { useEffect, useState } from 'react';\nimport { getTrendingMovies } from 'services/api';\nimport { useSearchParams } from 'react-router-dom';\n\nconst HomePage = () => {\n  const [trendingMovies, setTrendingMovies] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const pageParam = Number(searchParams.get('page') ?? 1);\n\n  useEffect(() => {\n    setLoading(true);\n    getTrendingMovies(pageParam)\n      .then(res => setTrendingMovies(res))\n      .finally(() => setLoading(false));\n  }, [pageParam]);\n\n  return (\n    <>\n      {loading && <Loader />}\n      <Container>\n        {trendingMovies && <MovieList movies={trendingMovies.results} />}\n        {trendingMovies?.total_pages && (\n          <PaginatedItems\n            setPage={setSearchParams}\n            totalPages={trendingMovies.total_pages}\n            currentPage={pageParam - 1}\n          />\n        )}\n      </Container>\n    </>\n  );\n};\n\nexport default HomePage;\n"],"names":["Item","styled","Content","Img","id","title","poster_path","release_date","location","useLocation","imgUrl","noPoster","releaseDate","slice","to","state","from","src","alt","width","List","MovieList","movies","map","ptopTypes","PropTypes","totalPages","setPage","currentPage","nextLabel","onPageChange","event","page","selected","pageRangeDisplayed","marginPagesDisplayed","pageCount","forcePage","previousLabel","pageClassName","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","breakLabel","breakClassName","breakLinkClassName","containerClassName","activeClassName","renderOnZeroPageCount","useState","trendingMovies","setTrendingMovies","loading","setLoading","useSearchParams","searchParams","setSearchParams","pageParam","Number","get","useEffect","getTrendingMovies","then","res","finally","results","total_pages"],"sourceRoot":""}